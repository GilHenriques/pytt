% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time.R
\name{parallelize}
\alias{parallelize}
\alias{parallelise}
\title{Evaluate an expression multiple times in parallel}
\usage{
parallelize(repeats, expr, workers, seed)

parallelise(repeats, expr, workers, seed)
}
\arguments{
\item{repeats}{Integer number of times to evaluate the expression}

\item{expr}{\code{R} expression to evaluate}

\item{workers}{Integer number of processor cores to use. Maximum: number of processor cores on the system minus 1. If no value is provided, or if the value provided exceeds the maximum, defaults to the maximum.}

\item{seed}{A single value, interpreted as an integer,.}
}
\description{
Evaluates an expression in parallel, in multiple background R processes.
Alias: parallelise.
}
\details{
Uses \code{\link[future]{plan}} from the \code{future} package to launch several background R processes, running on different processor cores on the same machine.
Uses \code{\link[doFuture]{registerDoFuture}} from the \code{doFuture} package and \code{\link[foreach]{foreach}} from the \code{foreach} package for the actual parallelization.
Uses \code{\link[doRNG]{\%dorng\%}} from the \code{doRNG} package to generate different random numbers in each repetition.

Note for users who have set a \code{future} strategy or registered a backend prior to calling \code{parallelize}: while this function sets its own \code{future} strategy and \code{foreach} backend, it restores the user's settings on exit.
}
\examples{
parallelize(repeats = 2, expr = rnorm(100), workers = 3, seed = 1)

}
